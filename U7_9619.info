FILE "U7_9619.bin" E000

comment  .   6809 INTERACTIVE DEBUG PROGRAM
comment  .FOR CREATIVE MICRO SYSTEMS 9609/19 MODULE
comment  .(C) 198? MICROWARE SYSTEMS CORPORATION
comment  .         DES MOINES, IOWA
comment  .

***** General Info
comment  F800 .
comment  F800 .HARDWARE REQUIREMENTS:
comment  F800 .
comment  F800 .  ROM  AT $F800 - $FFFF
comment  F800 .  RAM  AT $8000 - $9FFF
comment  F800 .  ACIA AT FFD4
comment  F800 .  PTM  AT FFD8   (ENABLED TO NMI)
comment  F800 .
comment  F800 SW1 jumpers set ACIA_1 BAUD
comment  F800 .
comment   E700 .
comment   E700 ROM LABEL:
comment   E700 .      Debug 2418
comment   E700 .      FFFE=A0
comment   E700 .      11/6/99
comment   E700 .
comment   E700 .ORGANIZATION:
comment   E700 .  E000-E6FF    EMPTY

*data E000-E6FF
unused    E000-E6FF
insert    E700 .        ORG     $E000
insert    E700 .        FILL    $FF,$700

comment   E700 .  E700-E7FF    RTC DATE/TIME
*unused   E700-E7FF
comment   E700 .  E800?EFFF    EPROM PROGRAMMER
*unused   E800-EFFF
comment   E700 .  F000?F7FF    ASSEMBLER
*unused   F000-F7FF
comment   E700 .  F800-FF7F    DEBUGGER
*unused   F800-FF7F
comment   E700 .  FF80-FFDF    I/O SPACE
*unused   FF80-FFDF
comment   E700 .  FFE0-FFFF    VECTORS
*unused   FFE0-FFFF
comment   E700 .

**** Section Info

comment  E700 ### RTC CLOCK UTILITIES

*** Section Format
*rmb   0000-009D
data  E7FD-E7FF

*** Section Labels
label E700 _SETCLK
label E70A _SETCL1
label E715 _SETCL2
label E71D _RTC_WR
label E738 _RTCADDRWR
label E74E _DELAY3
label E75D _PRCLK
label E758 _DTCMDERR
label E77C _PRCL3
label E780 _PRDIV
label E785 _PRDDIG
label E78B _PR2X
label E78D _PR1X
label E795 _RDCLK
label E79A _RDCL2
label E79E _RDCL3
label E7A8 _RDCL4
label E7AF _RTC_RD
label E7DB _RTC_SSR

*** Section Comments
comment  E700 CB2 is EN' for decoder U33
comment  E700 U is pointing to PIADDR0
comment  E700 RTC DATA STORED IN A
comment  E700 RTC ADDR DECrementeD AT B
lcomment E705 GET PIA0 ADDR
lcomment E708 START AT RTC DECADE ADDR
dec E709
lcomment E70A CHECK VALID INPUT
lcomment E70D thought _XCMDCHK did this already
bin E710
lcomment E70F ON 10 HR DIGIT REG...
lcomment E713 FORCE 24 HR CLOCK
lcomment E719 DECREMENT RTC ADDR
comment  E71D Set the RTC DATA from A Reg
lcomment E71D SAVE A&B REGISTERS
lcomment E721 GET A FROM A ON STACK
lcomment E723 SET PB4 HI (RTC-WT)
bin E724
lcomment E725 SAVE TO PIA0 PORB
bin E728
lcomment E727 SELECT POR, SET CB2-LO
lcomment E729 SAVE TO PIA0 CRB
lcomment E72D 16 CYCLE DELAY?
lcomment E72F SELECT POR, SET CB2-HI
bin E730
lcomment E731 SAVE TO PIA0 CRB
lcomment E736 RESTORE A&B, RTS
comment  E738 Set the RTC ADDR from B Reg
lcomment E738 SAVE A&B REGISTERS
bin E73B

lcomment E73A SELECT DDR, SET CB2-HI
lcomment E73C SAVE TO PIA0 CRB
lcomment E73E PB7,6 in; PB5-0 out
bin E73F
lcomment E740 SAVE TO PIA0 DDRB
bin E743
lcomment E742 SELECT POR
lcomment E744 SAVE TO PIA0 CRB
lcomment E746 LOAD B FROM B ON STACK
lcomment E748 SAVE TO PIA0 PORB
bin E74B
lcomment E74A SELECT POR, SET CB2-LO
lcomment E74C SAVE TO PIA0 CRB
lcomment E74E 3 CYCLE DELAY?
bin E753
lcomment E752 SELECT POR, SET CB2-HI
lcomment E754 SAVE TO PIA0 CRB
lcomment E756 RESTORE A&D, RTS
*bin E758
char E764
lcomment E765 PUSH '/' ON TO STACK
lcomment E767 PRINT DATE
lcomment E76B SPACE BTWN DT, TM
char E771
lcomment E770 USE ':' NOW
lcomment E774 PRINT TIME
lcomment E777 #$34 in S and A
lcomment E77C LOOP 3 TIMES
lcomment E782 PRINT / or : BTWN DIGITS
lcomment E787 DECREMENT LOOP COUNTER
lcomment E788 KEEP OUTPUTTING
lcomment E78D GET X, INC X
lcomment E78F CONVERT TO ASCII #
lcomment E791 PRINT IT
lcomment E794 RETURN
lcomment GET THE DATE/TIME STORE AT X BUF
lcomment E79A START AT RTC DECADE ADDR
lcomment E79E GET THE DIGIT
dec E79B
lcomment E7A2 ON 10 HR DIGIT REG...
lcomment E7A6 JUST GET DIGIT
lcomment E7AA DECREMENT RTC ADDR
lcomment E7AB DO NEXT
lcomment E7AD RESTORE X, RTS
lcomment E7AF SAVE A&B REGISTERS
lcomment E7B4 SELECT DDR, SET CB2-HI
bin E7B5
lcomment E7B6 SAVE TO PIA0 CRB
bin E7B9
lcomment E7BC SELECT POR
bin E7BD
lcomment E7BE SAVE TO PIA0 CRB
lcomment E7B8 PB7,6 in; PB5,4 out PB3-0 in
lcomment E7BA SAVE TO PIA0 DDRB
lcomment E7C0 SET PB5 HI (RTC-RD)
bin E7C1
lcomment E7C2 SAVE TO PIA0 PORB
lcomment E7C4 SELECT POR, SET CB2-LO (EN')
bin E7C5
lcomment E7C6 SAVE TO PIA0 CRB
lcomment E7CC LOAD PIA0 PORB
lcomment E7CE KEEP ONLY RTC DATA
lcomment E7CA 16 CYCLE DELAY?
lcomment E7D0 STORE VALUE IN A ON STACK
lcomment E7D2 SELECT POR, SET CB2-HI
bin E7D3
lcomment E7D4 SAVE TO PIA0 CRB
lcomment E7D9 RESTORE A&B, RTS
lcomment E7DD RTC ADDR FOR STANDARD SIGNAL REG
lcomment E7E2 SELECT DDR, SET CB2-HI
bin E7E3
lcomment E7E4 SAVE TO PIA0 CRB
lcomment E7E6 PB7,6 in; PB5,4 out PB3-0 in
bin E7E7
lcomment E7E8 SAVE TO PIA0 DDRB
lcomment E7EA SELECT POR
bin E7EB
lcomment E7EC SAVE TO PIA0 CRB
lcomment E7EE SET PB5 HI (RTC-RD)
bin E7EF
lcomment E7F0 SAVE TO PIA0 PORB
lcomment E7F2 SELECT POR, SET CB2-LO (EN')
bin E7F3
lcomment E7F4 SAVE TO PIA0 CRB
lcomment E7F6 STORE SSR DATA IN A
bin E7F9
lcomment E7FA SHIFT LEFT, SET CARRY?
lcomment E7FB RESTORE A&D, RTS


comment  E800 .
comment  E800 ### EPROM PROGRAMMER

*** Section Format
word E800-E803
data E80A-E820
data ECE0-ED05
data ED07-EDE1
data EDE5-EE59
data EFD9-EFFF

word EFDD
word EFE1
word EFE5

*** Section Labels
label AA55 XTAG
label E800 XTAGLOC
label E80A EPRM_DP
label E802 XCMDTBL_VEC
label E80C PIA2PRA_VEC
label E80E PIA2CRA_VEC
label E810 PIA2PRB_VEC
label E812 PIA2CRB_VEC
label E814 PIA1PRA_VEC
label E816 PIA1CRA_VEC
label E818 PIA1PRB_VEC
label E81A PIA1CRB_VEC
label E81C AC1CR_VEC
label E81E AC1DR_VEC
label E820 BSP
label E821 DLE

label EBB2 SKIPSP2
label EC3E HEXDEC2
label EC7A RETNO
label EC67 DIGIT2
label EC77 DIGIT3
label ECF5 EPMSG_TBL
label EDB4 EPCMD_TBL
label EE5A EP1INIT
label EE60 EPINIT0
label EE8F EP_IN3
label EE94 EP_IN2
label EE9F EP_IN1
label EEA2 EP2INIT
label EFDB XCMDTBL

label FC32
*** Section Comments

*char EA25

comment  E80C I/O VECTOR TABLE
lcomment E821 DATA LINK ESCAPE ?
lcomment E820 BACKSPACE ?
label E822 PRWTNXT
label E827 PRCKNXT
label E83E PRGOTBS
lcomment E827 SAVE A TO STACK
lcomment E829 GET NEXT CHAR FROM ACIA
lcomment E82D CHECK IF CHAR AVAILABLE
lcomment E835 LOAD ACIA STATUS REGISTER
lcomment E833 RESTORE A FROM STACK
bin E83A
lcomment E839 MASK OUT IRQ
lcomment E83B CLEAR CARRY FLAG
lcomment E83D RETURN WITH STATUS IN A, CARRY SET IS BKS
lcomment E842 SAVE A
lcomment E844 CHECK IF NEXT CHAR IS AVAIL
lcomment E84E ESC KEY
lcomment E83E SET CARRY FLAG
lcomment E840 RETURN
bin E849
label E852 PRGETCHAR

lcomment E852 GET CHAR FROM ACIA
lcomment E856 CHECK IF DATA LINK ESC CHAR

comment E863 ENTRY POINT INTO EPROM PROGRAMMER
comment E863 FOR CMS 9614, 9617, 9618 HEADS
label E863 EPROM
lcomment E86A DATA BUFFER DIRECT PAGE ADDRESS
lcomment E86C SET LOOP COUNTER 255
lcomment E86E CLEAR THE BUFFER
lcomment E868 DIRECT PAGE TO BUFFER
lcomment E870 DECREMENT COUNTER
lcomment E871 KEEP LOOPING IF >0
label E86E EPRM2
label E87A EPRM3
lcomment E87E SET DIRECT PAGE TO BUFFER
lcomment E883 $9DFF = END OF DP?
const E881
lcomment E89C PRINT "WHAT?"
lcomment E88D PRINT PROMPT
char E8F9
lcomment E994 PRINT "EXEEDED SIZE"
lcomment E9BE PRINT "START  END"
lcomment EA1C UNKNOWN ERROR
lcomment EA1E PRINT "ARRRGH!!!"
lcomment EA45 PRINT "EXEEDED SIZE"

lcomment EAFA SAVE B
lcomment EAFF RESTORE B

lcomment EB08 PRINT "WRONG HEAD"
lcomment EB0C SET LOC TO END OF BUFFER
label EB1C EPPRMSG
lcomment EB1E LOAD POINTER TO MSG TBL INTO X
lcomment EB28 CONVERT A TO WORD OFFSET (x2)
lcomment EB29 GET THE POINTER TO THE MSG
lcomment EB2B GET THE ADDRESS OF THE MSG INTO X
lcomment EB30 RETURN
lcomment EB8F LO NIBBLE
lcomment EB91 CONVERT TO ASCII NUM
char EB94
lcomment EB95 DIGIT?
dec EB98
*label EB81 BIN2HEX
*label EB8F HEXCHR
*label EB99 HXCHR2

lcomment EB83 GET HI NIBBLE
lcomment EB87 THEN CONVERT IT
lcomment EB89 RESTORE BYTE
lcomment EB8B CONVERT IT
lcomment EB8D RESTORE A, RETURN
lcomment EB8F MASK LOW BYTE
lcomment EB93 RANGE 0-9?
lcomment EB95 IF SO SKIP CORRECTION
lcomment EB97 ADJUST FOR A-F
lcomment EBC0 GET NEXT MSG LETTER
lcomment EBC2 CHECK FOR NULL END
lcomment EBC7 CONTINUE UNTIL NULL
lcomment EBC9 RETURN

lcomment EC5B CR   CHAR
lcomment EC60 LF   CHAR
lcomment EC67 TEST LOWER BOUND
lcomment EC69 EXIT IF NOT A DIGIT
lcomment EC6B TEST HIGH BOUND
lcomment EC6D PROCEED IF OK
lcomment EC84 PRINT "EXCEEDED SIZE OF DEVICE..."
lcomment ECAF SPACE CHAR
lcomment ECB4 BACK SPACE CHAR
lcomment ECF5 #$00. OFFSET TO ED07 STRING "START  END"
lcomment ECF7 #$01. OFFSET TO ED27 STRING "WRONG HEAD"
lcomment ECF9 #$02. OFFSET TO ED42 STRING "EXEEDED SIZE"
lcomment ECFB #$03. OFFSET TO ED6B STRING "PLEASE SELECT"
lcomment ECFD #$04. OFFSET TO ED92 STRING (PROMPT)
lcomment ECFF #$05. OFFSET TO ED96 STRING "WHAT?"
lcomment ED01 #$06. OFFSET TO ED9C STRING "ARRRGH!!!"
lcomment ED03 #$07. OFFSET TO EDA6 STRING "ADDR PR MM"
lcomment ED05 #$09. OFFSET TO ED89 STRING "CHANGE?"
word ECF5-ED06
const ECFD

word EDB9
word EDC0
word EDC7
word EDCE
word EDD5
word EDDB
word EDE2
word EDE6
word EDED
word EDF4
word EDFB
word EE02
word EE0A
word EE11
word EE19
word EE20
word EE26

comment  EE5A CLEAR THE PIA I/O ADDRESS STORED AT E81A-E80C
lcomment EE5A LOAD EFFECTIVE ADDRESS OF AC1CR_VEC
lcomment EE5E 8 PIA REGISTERS TO CLEAR
lcomment EE60 DECREMENT EXTENDED ADDRESS
lcomment EE62 DEC COUNTER
lcomment EE63 CONTINUE TO CLEAR REGISTERS
comment EE65 LOAD HEAD TYPE FROM PIA1, PORTB, BIT 6,7
lcomment EE65 SET 4-7 IN, 0-3 OUT
lcomment EE67 SAVE TO PIA1 DDRB
lcomment EE6B SELECT POR, SET CB2-LO
lcomment EE6D SAVE TO PIA1 CRB
lcomment E940 PRINT "ADDR PR MM" x4
lcomment EE71 SAVE PIA1 PORB
lcomment EE75 SELECT PIA1 DDRB, CB2 INPUT

bin EE6C
bin EE7A
bin EE7E
bin EE82
bin EE95
bin EEAF
bin EEA5



label 009D EPHEAD
label 0096 EPLOC

comment  EE79 CHECK HEAD TYPE
comment  EE79 CMS 9614, 9617, 9618 AND INIT ACCORDINGLY
lcomment EE79 CHECK ONLY PB6 AND PB7
lcomment EE7B IF BOTH,
lcomment EE7D CHECK IF PB7 HI
lcomment EE7F IF SO


lcomment EE81 CHECK IF PB6 HI
lcomment EE83 IF SO
lcomment EE87 PRINT "WRONG HEAD"
lcomment EE8C SET CARRY FLAG
lcomment EE8E RETURN WITH ERROR IN CARRY

lcomment EE94 SET 6-7 IN, 0-5 OUT
lcomment EE96 SAVE TO PIA1 DDRB
lcomment EEA4 SET 0-7 OUTPUT
lcomment EEA6 SAVE TO PIA1 DDRA
lcomment EEAA SAVE TO PIA2 DDRA

lcomment EEAE SELECT POR, SET CA/B2-LO
lcomment EEB0 SAVE TO PIA2 CRA
lcomment EEB4 SAVE TO PIA1 CRA
lcomment EEB8 SAVE TO PIA1 CRB

lcomment EF29 SELECT DDR
bin EF2A
lcomment EF35 SELECT POR
bin EF36
lcomment EF5B SELECT DDR MASK
bin EF5C
lcomment EF65 SELECT POR MASK
bin EF66

lcomment EF79 RESTORE X,A&B, RTS
lcomment EF7B SAVE X,A
lcomment EF9F restore X,A, RTS
lcomment EFA1 store X,D
lcomment EFA8 SAVE POINTER TO TABLE IN X

lcomment EF81 SELECT DDR
bin EF82
lcomment EF87 ALL OUTPUT
lcomment EF8D SELECT POR
lcomment EFA7 AxB into D


bin EF8E
comment  EFDB EXTENDED COMMAND DISPATCH TABLE

comment  F000 .
comment  F000 ### ASSEMBLER

*** Section Format
data F000-F01B
data F0AE-F117
data F59C-F7FF
data F475-F4B4
data F4B5-F59A

word F002
word F009
word F00E
word F013
word F018

* Command Table Entry Points
label F01C DICMD
label F039 DBCMD
label F064 XDCMD
label F060 TDCMD
label F039 DBCMD
label F039 DBCMD
label F039 DBCMD

*** Section Labels
label F07A SSBK2?X
label F475 SFLGS
label F026 DIERR
label F02B DICM1
label F02D DICM2
label F042 DBCM1
label F047 DBCM2
label F04D DBCM3
label F05C DBCMR

*** Section Comments
comment  F01C .
comment  F01C "DI" COMMAND: DISASSEMBLE INSTRUCTION
comment  F039 .
comment  F039 "DB" COMMAND: DISASSMEBLE BLOCK OF INSTRUCTIONS

comment  F07C Looks same as SSBK @ FCD1
lcomment F07C STOP TIMER
lcomment F083 SAVE USER STACK
lcomment F1C2 CHECK FLAG VIA CARRY BIT
*label F1C2 DSPCC1
lcomment F1CA BRANCH IF NOT DONE
lcomment #$9F GET DEBUGGER DIRECT PAGE
lcomment OUTPUT $
char F1F2
char F1D9
lcomment F475 CONDITION CODE LABELS

comment  F800 .
comment  F800 ### DEBUGGER

*** Section Format
data F9F3-FA17
data FD1A-FD45
data FD46-FDAE
data FDC0-FE04
data FF7F
word FD4C
word FD50
word FD55
word FD5A
word FD5F
word FD63
word FD68
word FD6C
word FD70
word FD74
word FD78
word FD7C
word FD80
word FD84
word FD88
word FD8C
word FD91
word FD96
word FD9A
word FD9A
word FD9F
word FDA3
data FDA7
word FDA8
word FDAA
word FDAC
*** Section Labels
** ZP LABELS
label 0002 DBUGSP
label 0004 IOBUF
label 0006 BKPTBL
label 0008 INBKPT
label 000B ACVECT
label 000C TIMOUT
label 0009 ACINIT
label 0011 SWIVCT
label 0017 NMIVCT
label 0022 BYTCNT

* Command Table Entry Points
label F8FE ACMD
label F902 BCMD
label F906 CCCMD
label F909 DPCMD
label F95B SPCMD
label F96D PCCMD
label F961 UCMD
label F965 XCMD
label F969 YCMD
label F99F ECMD
label FA18 VCMD
label FA48 CCMD
label FA90 MCMD
label FAB5 GCMD
label FADE JCMD
label FAED BKCMD
label FB2E KBCMD
label FB69 NCMD
label FB72 GTCMD
label FB92 LCMD
label FB8C VLCMD

** Debugger LABELS
label F800 START
label F82C _BKPINIT
label F831 INIT2
label F841 A1IOINIT
label F86B A1INIT3
label F86E COMAND

label F8A2 ILLCMD
label F8A8 CMDERR
label F8B5 _CMDSRC

label F9C6 DSPREG
label F9F3 REGSTR
label FB50 FNDBKP

label FC46 A0IOINIT

label FC59 A0INPCHR
label FC5E A0INPCH2
label FCA0 BKPT
label FCBD BKPT2
label FCC2 BKPT3
label FCCA BKPT4
label FCD1 SSBK
label FCF3 _PREGCMD

label FD1A TITLE
label FD24 ERRMSG
label FD2E PROMPT
label FD30 OK_MSG
label FD34 BADMSG
label FD39 VRFMSG

comment  FD4A COMMAND DISPATCH TABLE
label FD4A CMDTBL

label FDAF _NCOMAND
label FDB2 _NCMDERR
label FDB5 _NSSBK

label FE6D _ENDLN

label FD02 SW3SVC
label FD06 SW2SVC
label FD0E FRQSVC
label FD12 IRQSVC
label FD0A SWISVC
label FD16 NMISVC
label A000 _START2

label FE05 RDLIN
label FE08 RDLN2
label FE17 RDLN3
label FE21 RDLN4
label FE21 RDLN4

label FE2A CHKEOL
label FE2F SKIPSP
label FE38 WRTLIN
label FE47 WRTLN2
label FE4C A1INPCHR
label FE51 A1INPCH2
label FE79 A1OUTCHR
label FE7E OUTCH2
label FE88 CPYSTR
label FE8A CPYST2
label FE97 CPYST3
label FE9B CPYST4

label FE9D PRHX2SP
label FEA1 PRHXSP
label FEA8 PR2HX
label FEB0 PRHINB
label FEB4 PRLONB
label FEBF HEX4BIN
label FECB HEX2DEC
label FEE0 _CHEXBIN
label FEE2 HEXDEC
label FEF4 _CLRC
label FEF7 _SETC
label FEFA GETLN

label FF21 YIN4HS
label FF23 BIN4HS

label FF27 YIN2HS
label FF29 BIN2HS
label FF2B PUTSPC
label FF33 BIN4HX
label FF39 BIN2HX
label FF47 HEXCHR
label FF4D HXCHR2

*** Section Comments

comment  F800 Initialization Entry Point

lcomment F800 DIRECT PAGE ADDR
lcomment F802 START AT TOP OF DP
lcomment F804 GET DP ADDRESS
lcomment F806 ALLOCATE USER STACK
dec F809
lcomment F808 MAKE ROOM FOR REGS
lcomment F810 DEFAULT USER PC
lcomment F80A SAVE INITIAL USER SP
lcomment F814 INITIAL USER CC REG
lcomment F816 GIVE TOTAL OF 64 BYTES
lcomment F819 SET DEBUG TOP OF STACK
lcomment F81C COPY MEM PTR TO X
lcomment F81E ALLOCATE I/0 BUFFER
lcomment F821 ALREADY ALLOCATED?
lcomment F825 SAVE ITS ADDRESS
lcomment F82C ALLOCATE BKPT TABLE
lcomment F82F SAVE ITS ADDRESS
lcomment F831 CLEAR BKPT TABLE
lcomment F835 LOOP TIL CLEAR
lcomment F83A SETUP NMI VECTOR
lcomment F83F SETUP SWI VECTOR

comment  F841 I/O (ACIA1) INITIALIZATION
lcomment F841 GET ACIA1 ADDRESS
lcomment F844 INIT VECTOR

lcomment F846 ($C5) CLEAR PIA0 CRA
lcomment F848 CLEAR PIA0 DDRA REG
bin F84B
lcomment F84C SET PIA0 CRA -IRQ, +POR, CA2 OUTPUT HI ON WRITE TO CRA
lcomment F84E GET PIA0 PORA
lcomment F850 GET LO NIBBLE (SW1, JP2)
lcomment F852 USE INTERNAL BAUD RATE GEN
bin F853
lcomment F854 DTR LOW, RTS LOW, NO IRQ, NO PARITY
bin F855
lcomment F856 SET ACIA1 COMMAND & CONTROL REG
lcomment F858 GET TIMER ADDRESS
lcomment F85B TIMER INIT VALUE
lcomment F85D INIT TIMER
lcomment F85F GET TIMEOUT VALUE
lcomment F862 SET VALUE INTO TIMER
comment  F86E FALL THROUGH TO COMMAND LOOP
comment  F86E Command Loop

lcomment F864 PROG NAME ADDR
lcomment F868 MOVE TO BUFFER

lcomment F86E GET PROMPT STRING
lcomment F86F PRINT IT
lcomment F872 INPUT COMMAND LINE
lcomment F87E IGNORE IF DELETED LINE
lcomment F888 COMPARE TO TEXT
lcomment F88F CHECK FOR EPROM PROGRAM ROM
lcomment F893 IF NOT THERE, EXIT
lcomment F895 START ADDR OF EXTENDED CMD TABLE
lcomment F89C EXIT IF NOT IN EXTENDED CMD TABLE

lcomment F8A0 GO FOR ANOTHER
comment  F8A2 UNRECOGNIZED COMMAND HANDLER
lcomment F8A4 REPORT IT...
comment  F8A8 COMMAND ERROR PROCESSOR
comment  F8B5 COMMAND TABLE SEARCH
lcomment F8C3 INCR TABLE PTR
lcomment F8CF GET MATCH CHAR
label F947 RPT2ERR
comment  F99F .
comment  F99F "E" COMMAND: EDIT MEMORY?
label F9A7 ECME
label F9AB ECM2
label F9B3 ECM3
label F9B9 ECM4
label F9C5 ECMR
comment  F9C6 .
comment  F9C6 SUBROUTINE DSPREG - DISPLAY
comment  F9C6 USER REGISTER CONTENTS

label F9D2 DSPRG1
label F9D5 DSPRG2
label F9E5 DSPRG3
label F9E9 DSPRG4
label F9F2 DSPRGR
comment  FA18 .
comment  FA18 "V" COMMAND: VIEW FORMATTED HEX
comment  FA18 AND ASCII(?) DUMP OF MEMORY RANGE
lcomment FA18 GET HEX ADDR START END
lcomment FA1B ERROR IF NOT 2 HEX ADDRESSES
label FA1B VCME
label FA21 VCM2
lcomment FA24 SET COUNTER TO 16
lcomment FA26 PUSH COUNTER ONTO STACK TO FREE B
lcomment FA32 DECREMENT THE COUNTER
lcomment FA36 RESTORE B FROM STACK
label FA2D VCM3
lcomment FA2D GET THE NEXT VALUE IN MEMORY
lcomment FA2F PRINT BYTE IN HEX & SPACE
label FA42 VCM4
label FA44 VCMR
comment  FA48 .
comment  FA48 "C" COMMAND: CLEAR AND TEST MEMORY
comment  FA48 COPIES THE BYTE STORED IN $8008
lcomment FA48 GET HEX ADDR START END
label FA4E CCM1
label FA55 CCM2
label FA5A CCM3
label FA66 CCM4
lcomment FA66 INDICATE ERROR CLEARING MEMORY
label FA73 CCM5

comment  FA77 GET 2 HEX ADDRESS: START, END IN U, D
label FA77 HEXASE
label FA8D HEXSE1
label FA8F HEXSE2
comment  FA90 .
comment  FA90 "M" COMMAND: MOVE MEMORY VALUES
label FA93 MCME
label FA9A MCM2
label FAAC MCM3
label FAC4 GCMD1
label FAC9 GCMD2
label FAD5 GCMD3
label FAFC BKCM1
label FB03 BKCM2
label FB0E BKCM3
label FB11 BKCME
label FB26 BKCM5
label FB29 BKCM6
dec FB55
label FB59 FNDBK2
label FB67 FNDBK3
****
label FB69
label FB6B GOCMD1
label FB80 GOCMD2
label FB88 GOCMD3
label FB94 LCM1
label FBAE LCM2
label FBB0 LCM3
label FBB3 LCM4
label FBBC LCM5
label FBE5 LCM6
label FBF4 LCM7
label FBFC LCM8
label FC07 LCM9
label FC0F LCM10
label FC11 LCM11
label FC1A LCM12

char F9BE
comment  FC46 CHECK PIA0-A SW1 DIP SWITCHES
lcomment FC11 PRINT A SLASH
lcomment FC4B LOAD PIA0 PORA
lcomment FC50 SHIFT HI NIBBLE TO LO (SW1)
lcomment FC51 USE INTERNAL BAUD RATE GEN
bin FC52
lcomment FC53 DTR LOW, RTS LOW, NO IRQ, NO PARITY
bin FC54
lcomment FC55 SET ACIA0 COMMAND & CONTROL REG
comment  FC59 INPUT CHARACTER FROM ACIA0
lcomment FC5E READ ACIA STATUS REGISTER
lcomment FC60 CHECK RX FULL BIT
lcomment FC62 WAIT TIL READY
lcomment FC64 GET CHAR
lcomment FC66 MASK OUT PARITY
lcomment FC68 CHECK FOR DELETE CHAR
lcomment FC6A IF DELETE GET NEXT CAR
lcomment FC6C NO ERROR, CLEAR CARRY
lcomment FC6E RETURN

lcomment EC7F NEGATIVE?
lcomment FC9E RETURN
comment  FCA0 .
comment  FCA0 BREAKPOINT SERVICE ROUTINE
comment  FCA0 .
comment  FCA0 SAVE USER STACK, SWITCH TO
comment  FCA0 DEBUG STACK, REMOVE BREAKPOINTS
comment  FCA0 AND DUMP USER REGISTERS
lcomment FCA0 DEBUG DP
lcomment FCA6 SAVE USER STACK PTR
lcomment FCA9 GET USER'S PC
lcomment FCAB DECREMENT IT
lcomment FCAE REPLACE IT
lcomment FCB0 LOAD DEBUG STACK
lcomment FCB3 ADDR IN TABLE?
lcomment FCB6 SKIP IF SO
lcomment FCC0 ELSE REPORT ILLEGAL BREAKPOINT

lcomment FCC6 GET SAVED OPCODE
lcomment FCC8 RESTORE IT
lcomment FCCA MOVE TO NEXT ENTRY
lcomment FCCC DONE YET?
lcomment FCCD LOOP IF NOT
lcomment FCCF PRINT REGS (?)
comment  FCD1 .
comment  FCD1 SINGLE STEP SERVICE ROUTINE
comment  FCD1 .
lcomment FCD3 STOP TIMER
lcomment FCD6 GET DEBUGGER DIRECT PAGE
lcomment FCDA SAVE USER STACK
lcomment FCDF LOAD DEBUGGER STACK

comment  FCE6 .
comment  FCE6 SINGLE STEP COMMAND PROCESSOR (?)
comment  FCE6 .

lcomment FCF3 PRINT REGISTERS
lcomment FCF6 GOTO COMMAND LOOP


lcomment FE0A BACKSPACE?
lcomment FE0C SKIP IF NOT
lcomment FE0E DONT BACKSPACE...
lcomment FE11 PAST BEG OF LINE
lcomment FE17 LINE DELETE?

lcomment FE23 WAS IT EOL?
lcomment FE25 IF NOT GET ANOTHER
comment  FE9D PRINT DREG SPACE IN HEX
lcomment FEA1 PRINT A BYTE IN HEX & SPACE
lcomment FEA5 PRINT SPACE
lcomment FEA8 PRINT BYTE IN HEX
lcomment FEB0 SHIFT HI NIBBLE TO LO
lcomment FEB4 PRINT HEX LO NIBBLE

lcomment FE4C SAVE XREG
lcomment FE4E GET ACAI ADDRESS
lcomment FE51 READ ACAI STATUS REGISTER
lcomment FE53 MASK READY BIT
lcomment FE55 WAIT TIL READY
lcomment FE57 GET CHAR
lcomment FE59 MASK OUT PARITY
lcomment FE5B RESTORE X REG
lcomment FE5D TEST ECHO?
lcomment FE62 OUTPUT IF ECHO ON
lcomment FE64 CR?
lcomment FE66 IF SO SKIP LF CHECK
lcomment FE68 LF?
lcomment FE6A GET NEXT
lcomment FE6C ELSE RETURN

*comment  FE79 Subroutine BINDEC - Convert word in D reg to
*comment  FE79 five-character decimal.

lcomment FE74 SEND LF
lcomment FE79 SAVE REGISTERS
lcomment FE7B GET FE7B ADDRESS
lcomment FE7E GET THE CHAR
lcomment FE80 LINEFEED?
lcomment FE82 IF SO GET NEXT
lcomment FE86 RESTORE REGISTERS
lcommnet FEA1 PRINT MEM HX VALUE & SPACE

lcomment FECB CONVERT NEXT CHAR TO DECIMAL
lcomment FECD RETURN IF NOT HEX
lcomment FED1 MULTIPLY BY 16
lcomment FED7 RETURN IF NOT HEX
lcomment FEDB ADD NEW DIGIT TO SUM
comment  FEE2 Subroutine HEXDEC - convert hexadecimal
comment  FEE2 ASCII char to decimal

lcomment FEE2 CONVERT FROM ASCII
lcomment FEE4 IF <'0' SET CARRY, RETURN

dec FEE7
dec FEEB
dec FEEF
lcomment FEE8 IF <='9', CLEAR CARRY, RETURN
lcomment FEEA 'A'
lcomment FEEC SET CARRY, RETURN IF < 'A'
lcomment FEEE 'F'
lcomment FEF0 SET CARRY, RETURN IF > 'F'
lcomment FEF2 [A-F] ARE LEFT
lcomment FEF4 CLEAR CARRY, RETURN
lcomment FEF7 SET   CARRY, RETURN

lcomment FEFA GET A LINE FROM INPUT, MAX CHARS IN B

comment  FF21 .
comment  FF21 .     TTL    6809 UTILITY SUBROUTINE PACKAGE
comment  FF21 .
comment  FF21 Input Conversion Subroutines
comment  FF21 These subroutines convert an usnigned binary
comment  FF21 number (passed in B or D, or input buffer at Y)
comment  FF21 to an ASCII character
comment  FF21 string starting at the address passed in the
comment  FF21 X register, which will return with the address
comment  FF21 following the string. All other registers
comment  FF21 except CC are preserved
comment  FF21 .
comment  FF21 Subroutine BIN4HS - Convert word in D reg to
comment  FF21 four-character hexadecimal followed by a space.
lcomment FF21 LOAD D FROM INPUT BUFFER
lcomment FF23 PERFORM CONVERSION
lcomment FF25 GO OUTPUT SPACE AND RTS

comment  FF27 .
comment  FF27 Subroutine BIN2HS - Convert word in B reg to
comment  FF27 two-character hexadecimal followed by a space.
lcomment FF27 LOAD B FROM INPUT BUFFER
lcomment FF29 PERFORM CONVERSION
comment FF2B FALL THROUGH TO PUTSPC AND RETURN

comment  FF2B .
comment  FF2B Subroutine PUTSPC - Put a space character in
comment  FF2B the output buffer and increment pointer (x)
comment  FF33 .
comment  FF33 Subroutine BIN4HX - Convert word in D reg to
comment  FF33 four-character hexadecimal.
comment  FF39 FALL THROUGH TO CONVERT LOW BYTE
comment  FF39 .
comment  FF39 Subroutine BIN2HX - convert byte in D reg to
comment  FF39 two-character hexadecimal.

comment  FF80 .
comment  FF80 ### I/O OVERLAP


data FF80-FFDF
*unused FF80-FFC3

label FFC4 PIADDR0
label FFC8 PIADDR1
label FFCC PIADDR2
label FFD0 ACADDR0
label FFD4 ACADDR1
label FFD8 TIMER

comment FFE0 .
comment  FFE0 ### VECTORS

data FFE0-FFFF
*unused FFE0-FFEF

label 9F0D RAM_SW3_VEC
label 9F0F RAM_SW2_VEC
label 9F11 RAM_SWI_VEC
label 9F15 RAM_FRQ_VEC
label 9F13 RAM_IRQ_VEC
label 9F17 RAM_NMI_VEC

label 9F04 A1IOBUF
label 9F0B A1CVECT
label 9F0A USECRLF

lcomment  FFF0 RESERVED




